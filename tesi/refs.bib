@misc{dep_inv_principle,
  title = {The Dependency Inversion
Principle},
  author = {Bob Martin},
  note  =  {\url{https://condor.depaul.edu/dmumaugh/OOT/Design-Principles/dip.pdf}},
}
@misc{pybind11,
   author = "{W. Jakob, J. Rhinelander, D. Moldovan and \href{https://github.com/pybind/pybind11/graphs/contributors}{others}}",
   year = {2017},
   title = "{\href{https://github.com/pybind/pybind11}{pybind11 -- Seamless operability between C++11 and Python}}"
}

@misc{rfc7252,
    series =    {Request for Comments},
    number =    7252,
    howpublished =  {RFC 7252},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC7252},
    url =       {https://www.rfc-editor.org/info/rfc7252},
    author =    {Zach Shelby and Klaus Hartke and Carsten Bormann},
    title =     {{The Constrained Application Protocol (CoAP)}},
    pagetotal = 112,
    year =      2014,
    month =     jun,
    abstract =  {The Constrained Application Protocol (CoAP) is a specialized web transfer protocol for use with constrained nodes and constrained (e.g., low-power, lossy) networks. The nodes often have 8-bit microcontrollers with small amounts of ROM and RAM, while constrained networks such as IPv6 over Low-Power Wireless Personal Area Networks (6LoWPANs) often have high packet error rates and a typical throughput of 10s of kbit/s. The protocol is designed for machine- to-machine (M2M) applications such as smart energy and building automation. CoAP provides a request/response interaction model between application endpoints, supports built-in discovery of services and resources, and includes key concepts of the Web such as URIs and Internet media types. CoAP is designed to easily interface with HTTP for integration with the Web while meeting specialized requirements such as multicast support, very low overhead, and simplicity for constrained environments.},
}
